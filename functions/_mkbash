#!/bin/bash

mkbash() {
  for param in "${@}"; do
    if [[ "${param}" = "-h" ]] || [[ "${param}" = "--help" ]]; then
      echo "Usage: mkbash path"
      return 1
    fi
  done

  local name
  name="${1:-}"
  if [ -z "${name}" ]; then
    echo "Must provide script name as parameter"
    return 1
  fi

  local dir="$(dirname "${name}")"
  if [ ! -d "${dir}" ]; then
    echo "Directory ${dir} doesn't exist, create it (Y/n)?"
    local response
    read response
    if [ "${response}" = "y" ] ||
       [ "${response}" = "Y" ] ||
       [ "${response}" = "yes" ] ||
       [ "${response}" = "" ]; then
      mkdir -p "${dir}"
    else
      return 0
    fi
  fi

  if [ -f "${name}" ]; then
    echo "File with name ${name} already exists. Delete file (Y/n)?"
    local response
    read response
    if [ "${response}" = "y" ] ||
       [ "${response}" = "Y" ] ||
       [ "${response}" = "yes" ] ||
       [ "${response}" = "" ]; then
      rm "${name}"
    else
      return 0
    fi
  fi

  cat > "${name}" << 'EOF'
#!/usr/bin/env bash

set -o errexit
set -o pipefail

__dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
__file="${__dir}/$(basename "${BASH_SOURCE[0]}")"
__base="$(basename "${__file}" .sh)"
__root="$(cd "$(dirname "${__dir}")" && pwd)"

main() {

}

main "$@"

EOF
  chmod u+x "${name}"
  vim "${name}"
}

